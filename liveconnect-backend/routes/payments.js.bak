// server.js
import express from "express";
import cors from "cors";
import cookieParser from "cookie-parser";
import http from "http";
import "dotenv/config";

import { requireAuth } from "./auth.js";
import messagesRoutes from "./messages.js";
import paymentsRoutes from "./payments.js";
import { setupRealtime } from "./realtime/io.js";

const PORT = process.env.PORT || 4000;
const FRONT = process.env.FRONT_ORIGIN || "http://localhost:8080";

const app = express();
app.use(express.json());
app.use(cookieParser());

// CORS i cookies
app.use(
  cors({
    origin(origin, cb) {
      if (!origin || origin === FRONT || origin === "http://localhost:3000") return cb(null, true);
      cb(new Error("CORS blocked: " + origin));
    },
    credentials: true,
  })
);

// Health
app.get("/health", (req, res) => {
  res.json({ ok: true, service: "backend", ts: new Date().toISOString() });
});

// Rute
app.use("/auth", authRoutes);
app.use(messagesRoutes);
app.use(paymentsRoutes);

// Http server + Socket.IO
const httpServer = http.createServer(app);
setupRealtime(httpServer, [FRONT, "http://localhost:3000", "http://localhost:8080"]);

httpServer.listen(PORT, () => {
  console.log(`HTTP+WS listening on ${PORT}`);
});
